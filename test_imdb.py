import lmdb
import os, sys
from data_utils import get_tokenizer
def initialize(file_name):
    env = lmdb.open(file_name, "r")
    return env

def insert(env, sid, name):
    txn = env.begin(write=True)
    txn.put(str(sid).encode('utf-8'), name.encode('utf-8'))
    txn.commit()

def delete(env, sid):
    txn = env.begin(write=True)
    txn.delete(str(sid).encode('utf-8'))
    txn.commit()

def update(env, sid, name):
    txn = env.begin(write=True)
    txn.put(str(sid).encode('utf-8'), name.encode('utf-8'))
    txn.commit()


import pickle
def search(env, sid):
    txn = env.begin()
    data = pickle.loads(txn.get(str(sid).encode('utf-8')))
    return data

def display(env):
    txn = env.begin()
    cur = txn.cursor()
    cnt = 0
    print("has")
    for key, value in cur:
        cnt += 1
        if cnt == 100:
            continue
        print("ha")
        print(key.decode('utf-8'), value.decode('utf-8'))

import argparse
import torch
from torchvision.utils import save_image
def check_data(dataset, file_name):
    dataset = dataset.replace('/', '-')
    args = argparse.Namespace()
    args.img_tokenizer_path = '/dataset/fd5061f6/cogview/vqvae_hard_biggerset_011.pt'
    args.img_tokenizer_num_tokens = None
    device = 'cuda:4'
    torch.cuda.set_device(device)
    tokenizer = get_tokenizer(args)
    print(file_name)
    path = "/dataset/fd5061f6/sougou/tokens0/"
    a = [899, 5405, 466, 5000, 466, 466, 466, 466, 466, 466, 466, 6211, 7589, 466, 466, 466, 466, 466, 466, 466, 466, 2449,
     6916, 6942, 5974, 5974, 5974, 6364, 5974, 1001, 3393, 1877, 899, 5405, 2708, 2708, 2708, 2708, 2708, 7837, 7837,
     2708, 2708, 2984, 7589, 2708, 2708, 2708, 2708, 2708, 2708, 2708, 6872, 2449, 566, 6942, 5974, 5586, 5353, 7546,
     5974, 1715, 6384, 3691, 899, 5951, 389, 389, 389, 389, 389, 389, 389, 389, 911, 6263, 2975, 1555, 389, 389, 389,
     389, 389, 389, 389, 4935, 566, 6942, 5586, 5586, 5353, 7546, 5974, 5602, 4579, 6003, 899, 7503, 5355, 5355, 5355,
     5355, 5355, 389, 389, 5331, 4679, 3519, 3519, 5916, 3919, 5355, 5355, 5355, 5355, 5355, 5355, 4935, 566, 6942,
     5586, 5586, 7546, 7546, 7546, 5602, 4579, 2095, 899, 7503, 3277, 3277, 3277, 3277, 3277, 204, 204, 3277, 3051,
     3550, 3550, 204, 3277, 3277, 3277, 204, 3277, 3277, 3277, 4935, 1170, 5974, 5586, 7546, 7546, 7366, 7546, 5602,
     4579, 2095, 899, 7503, 3277, 3277, 797, 3465, 3277, 3277, 797, 347, 3465, 5936, 2023, 204, 7257, 3277, 3277, 3277,
     571, 3277, 2705, 4935, 1170, 5974, 5586, 7546, 4978, 7366, 7546, 4870, 4579, 2095, 899, 661, 3465, 797, 4258, 3702,
     4855, 4258, 4258, 6775, 6981, 386, 3724, 4453, 2705, 263, 413, 2372, 1935, 741, 7257, 4935, 1170, 5586, 7546, 4978,
     4978, 7366, 7546, 4870, 4579, 2095, 8021, 959, 347, 5790, 1669, 443, 2195, 2385, 4339, 3067, 431, 2461, 7850, 1599,
     5627, 4639, 2364, 1741, 431, 6155, 5855, 2449, 1170, 5974, 4978, 4978, 7366, 3290, 7546, 4870, 4579, 2095, 8021,
     5275, 6553, 2385, 2904, 792, 994, 5776, 1284, 3708, 3708, 4948, 4176, 5521, 3708, 3269, 4948, 4176, 3269, 3708,
     1284, 2449, 1170, 5586, 4978, 4978, 7366, 3290, 7546, 4870, 6576, 2095, 8001, 7359, 3572, 8094, 2448, 2720, 4815,
     4123, 6516, 6838, 6516, 6226, 7158, 6226, 7158, 7158, 6226, 6226, 6226, 4123, 4176, 2449, 1170, 5586, 153, 5925,
     3290, 5925, 4773, 4870, 4579, 2095, 2041, 7359, 8094, 2248, 2248, 4123, 5776, 3502, 4123, 6838, 6838, 6838, 6838,
     6838, 6838, 6838, 6838, 6838, 6838, 4123, 5776, 2449, 1170, 5586, 153, 3277, 1295, 3702, 3702, 1126, 3141, 7459,
     2041, 599, 7218, 5776, 5776, 2248, 4123, 7083, 5776, 4123, 4123, 4123, 6516, 6838, 6838, 6838, 6838, 6838, 6226,
     4123, 5776, 2449, 1170, 5974, 153, 797, 6245, 5729, 397, 1590, 3858, 998, 8052, 7359, 8094, 7868, 5776, 5776, 5776,
     4123, 5776, 4123, 4123, 4123, 4123, 4123, 4123, 4815, 4815, 6226, 4815, 4123, 5776, 2449, 6916, 5974, 1665, 797,
     2705, 5729, 3620, 5173, 4121, 4328, 674, 5275, 5898, 5764, 8094, 388, 8094, 7218, 7218, 7218, 8094, 5776, 5776,
     5776, 5776, 5776, 5776, 5776, 5776, 5776, 1284, 2449, 4130, 6942, 1665, 3702, 6245, 6370, 1278, 4121, 229, 2953,
     1004, 4654, 4654, 4654, 4110, 4110, 4110, 4110, 4110, 6618, 4110, 793, 4110, 793, 4110, 4110, 4110, 4110, 4110,
     3561, 4654, 4338, 5418, 7546, 7546, 2705, 6245, 6771, 1665, 5974, 7366, 5429, 1170, 7992, 4598, 1468, 1030, 5418,
     5974, 5586, 7546, 7546, 229, 7546, 7366, 229, 7546, 7546, 7546, 5586, 5418, 6942, 5256, 548, 7366, 7366, 153, 5031,
     7257, 5729, 5353, 4793, 8002, 5353, 7920, 8160, 8002, 6942, 5974, 5586, 7546, 7366, 7366, 7366, 3290, 3290, 3290,
     3290, 3290, 3290, 7366, 7366, 7366, 7546, 6446, 1930, 7366, 7366, 153, 4258, 6245, 2205, 1427, 4773, 1030, 6590,
     7920, 8160, 6942, 6942, 5974, 5586, 7546, 7366, 7366, 7366, 3290, 7366, 3290, 3290, 3290, 3290, 7366, 7366, 7366,
     7366, 6446, 6131, 7366, 7546, 1665, 5031, 3277, 5283, 4214, 8002, 5526, 6502, 6916, 364, 1468, 6942, 6942, 5586,
     7546, 7546, 7366, 7366, 7366, 7366, 3290, 3290, 3290, 7366, 3290, 7366, 7366, 7546, 6446, 6131, 7546, 7546, 6446,
     5031, 6245, 5729, 6446, 5526, 6789, 8080, 6916, 364, 1468, 1468, 6942, 5974, 5586, 5586, 7546, 7546, 7546, 4978,
     7366, 7366, 7366, 7366, 7366, 7546, 7546, 7546, 6446, 6131, 7546, 7546, 6446, 5031, 6245, 5729, 5218, 3702, 6770,
     4980, 4130, 364, 5480, 1468, 6634, 6942, 5586, 5586, 5586, 7546, 7546, 7546, 7366, 7366, 7366, 7366, 7366, 7546,
     7366, 7546, 6446, 4127, 7546, 7546, 6446, 5031, 6245, 2205, 3290, 966, 5548, 3096, 7560, 3453, 8160, 4130, 4130,
     4130, 3808, 3808, 3808, 5684, 5684, 5684, 5684, 5429, 5429, 5429, 5429, 5429, 5429, 1257, 5684, 5684, 5684, 5684,
     56, 2705, 3222, 2205, 5418, 4864, 3096, 7250, 6553, 5686, 7959, 1982, 1982, 6535, 3534, 1683, 1683, 3844, 2081,
     201, 1132, 212, 212, 4372, 4372, 212, 212, 212, 212, 212, 60, 60, 60, 212, 212, 1705, 5651, 6388, 4696, 1544, 7445,
     2582, 3087, 4842, 8112, 3572, 7976, 3572, 3572, 7553, 3652, 1896, 4232, 2148, 4936, 3726, 316, 4500, 7213, 7213,
     7213, 7213, 7213, 7213, 416, 3272, 7572, 866, 4361, 1460, 7874, 3147, 388, 3572, 5359, 5845, 5845, 7815, 7815,
     7815, 7815, 926, 7578, 4134, 7488, 7488, 7572, 7572, 1824, 1824, 1824, 1824, 1824, 5413, 5413, 5413, 2572, 4384,
     1436, 866, 6682, 2280, 3147, 4212, 3410, 8024, 6814, 1377, 8024, 7460, 1377, 7460, 1377, 1377, 5090, 790, 4650,
     5120, 7572, 1667, 6672, 5413, 5413, 6672, 18, 368, 6672, 5413, 4460, 1300, 368, 68, 6993, 3147, 7833, 6510, 880,
     880, 1124, 7288, 880, 1816, 3693, 3334, 5442, 5722, 4754, 1147, 5220, 1858, 2284, 408, 1132, 128, 6672, 5610, 1667,
     5413, 1132, 1132, 794, 4057, 1436, 5752, 375, 7927, 6963, 1964, 3410, 880, 3410, 880, 3410, 1816, 3410, 5442, 2584,
     3746, 774, 4830, 6650, 1132, 6946, 776, 7213, 7965, 7844, 1476, 1324, 2994, 368, 1324, 5413, 4140, 368, 7642, 5030,
     7059, 5736, 6008, 3410, 3410, 3334, 3410, 7288, 1124, 2584, 7716, 2798, 3746, 774, 3622, 4288, 6672, 7792, 4288,
     5413, 5413, 4288, 7220, 7220, 5413, 5413, 5413, 6672, 4140, 528, 2262, 515, 115, 6008, 468, 3410, 2584, 2584, 7716,
     2584, 7716, 7716, 2798, 3746, 3516, 2017, 520, 3884, 7844, 7792, 7213, 7220, 7213, 7213, 4288, 5120, 4288, 4288,
     316, 776, 3272, 7332, 4629, 3144, 148, 817, 2963, 3746, 3746, 3746, 3516, 3746, 3516, 3746, 3746, 3746, 3516, 8164,
     2859, 4268, 2790, 444, 2060, 4292, 7552, 6252, 6252, 5950, 5911, 5011, 1768, 6898, 6652, 1042, 2262, 2823, 6893,
     6824, 7682, 8164, 6298, 3516, 5110, 3516, 8164, 6298, 2876, 4980, 1640, 7384, 966, 3301, 7229, 3738, 4130, 1183,
     1183, 500, 7922, 5536, 3360, 5911, 5950, 1621, 5834, 5504, 5473, 3147, 6682, 375, 3308]
    txt, images = tokenizer.DecodeIds(a)
    save_image(images, f"tsssb{dataset}.jpg", normalize=True, range=None)
    exit(0)
    with lmdb.open(file_name) as env:
        imgs = []
        txts = []
        for i in range(2100000,2100000 + 10):
            txt, images = tokenizer.DecodeIds(search(env, i))
            txts.append(txt)
            imgs.extend(images)
        print(txts)
        imgs = torch.cat(imgs, dim=0)
        save_image(imgs, f"text_imdb{dataset}.jpg",  normalize=True, range=None)
    pass

if __name__ == "__main__":
    dataset = "51tietu_image_data_vqvae_hard_biggerset_011.lmdb"
    # lmdb_env = lmdb.open(f'/root/mnt/lmdb/{dataset}', writemap=True)
    # with lmdb_env.begin(write=True) as txn:
    #     txn.put('length'.encode('utf-8'), str(index).encode('utf-8'))
    check_data(dataset, f"/root/mnt/lmdb/{dataset}")